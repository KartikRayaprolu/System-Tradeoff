length(testing_3)
table(training_3$pol)
# SMOTE sampling
# install.packages("DMwR")
library(DMwR)
over2 <- SMOTE(pol ~., data = training_3, perc.over = 200)
over2
# Model
logit_model_3 <- glm(pol ~., data = over2, family = "binomial")
logit_model_3
summary(logit_model_3)
fitted_results3 <- predict(logit_model_3, testing_3, type = "response")
fitted_results3
fitted_results30 <- ifelse(fitted_results3 > 0.5, 1, 0)
fitted_results30
table(testing_3$pol, fitted_results30)
mis_ClassError_3 <- mean(fitted_results30 != testing_3$pol)
mis_ClassError_3
print(paste("Accuracy = ", 1 - mis_ClassError_3))
# install.packages("caret")
library(caret)
confusion_matrix_3 <- confusionMatrix(table(testing_3$pol,fitted_results30))
confusion_matrix_3
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc_info3 <- roc(testing_3$pol, fitted_results3, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 3")
#With Threshold
roc_info30 <- roc(testing_3$pol, fitted_results30, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 30")
m_2 <- read.csv(file.choose(), header = T)
# View(mission_2)
m_2 <- m_2[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(m_2) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(m_2)
str(m_2)
m_2$pol <- as.factor(m_2$pol)
str(m_2)
table(m_2$pol)
summary(m_2)
#install.packages("caTools")
library(caTools)
set.seed(009)
s_2 <- sample.split(m_2, SplitRatio = 0.7)
training_2 <- subset(m_2, s_2 == T)
testing_2 <- subset(m_2, s_2 == F)
length(testing_2)
table(training_2$pol)
summary(training_2)
# Model
logit_model2 <- glm(pol ~., data = training_2, family = "binomial")
logit_model2
summary(logit_model2)
fitted_results2 <- predict(logit_model2, testing_2, type = "response")
fitted_results2
fitted_results20 <- ifelse(fitted_results2 > 0.5, 1, 0)
fitted_results20
table(testing_2$pol, fitted_results20)
mis_ClassError_2 <- mean(fitted_results20 != testing_2$pol)
mis_ClassError_2
print(paste("Accuracy = ", 1 - mis_ClassError_2))
# install.packages("caret")
library(caret)
confusion_matrix_2 <- confusionMatrix(table(testing_2$pol,fitted_results20))
confusion_matrix_2
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc_info2 <- roc(testing_2$pol, fitted_results2, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "WS ROC model 2")
#With Threshold
roc_info20 <- roc(test_2$pol, fitted.results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
#With Threshold
roc_info20 <- roc(test_2$pol, fitted.results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
# ROC-AUC Curve
# Without Threshold
roc_info2 <- roc(testing_2$pol, fitted_results2, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "WS ROC model 2")
#With Threshold
roc_info20 <- roc(test_2$pol, fitted.results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
#With Threshold
roc_info20 <- roc(testing_2$pol, fitted.results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
#With Threshold
roc_info20 <- roc(testing_2$pol, fitted_results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
# ROC-AUC Curve
# Without Threshold
roc_info2 <- roc(testing_2$pol, fitted_results2, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "WS ROC model 2")
#With Threshold
roc_info20 <- roc(testing_2$pol, fitted_results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "ROC model 20")
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc_info2 <- roc(testing_2$pol, fitted_results2, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "WS ROC model 2")
#With Threshold
roc_info20 <- roc(testing_2$pol, fitted_results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "purple", lwd = 4, print.auc = T, main = "ROC model 20")
mission_2 <- read.csv(file.choose(), header = T)
mission_2 <- read.csv(file.choose(), header = T)
# View(mission_2)
mission_2 <- mission_2[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(mission_2) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(mission_2)
str(mission_2)
mission_2$pol <- as.factor(mission_2$pol)
str(mission_2)
table(mission_2$pol)
summary(mission_2)
#install.packages("caTools")
library(caTools)
set.seed(009)
split_2 <- sample.split(mission_2, SplitRatio = 0.7)
train_2 <- subset(mission_2, split_2 == T)
test_2 <- subset(mission_2, split_2 == F)
length(test_2)
table(train_2$pol)
summary(train_2)
#Scaling
train_2[-23] <- scale(train_2[-23])
test_2[-23] <- scale(test_2[-23])
# Model
logit_model2 <- glm(pol ~., data = train_2, family = "binomial")
logit_model2
summary(logit_model2)
fitted.results2 <- predict(logit_model2, test_2, type = "response")
fitted.results2
fitted.results20 <- ifelse(fitted.results2 > 0.5, 1, 0)
fitted.results20
table(test_2$pol, fitted.results20)
misClassError_2 <- mean(fitted.results20 != test_2$pol)
misClassError_2
print(paste("Accuracy = ", 1 - misClassError_2))
# install.packages("caret")
library(caret)
cm_2 <- confusionMatrix(table(test_2$pol,fitted.results20))
cm_2
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc.info2 <- roc(test_2$pol, fitted.results2, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 2")
#With Threshold
roc.info20 <- roc(test_2$pol, fitted.results20, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "green", lwd = 4, print.auc = T, main = "ROC model 20")
m_3 <- read.csv(file.choose(), header = T)
# View(m_3)
m_3 <- m_3[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(m_3) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(m_3)
str(m_3)
m_3$pol <- as.factor(m_3$pol)
str(m_3)
table(m_3$pol)
summary(m_3)
#install.packages("caTools")
library(caTools)
set.seed(009)
s_3 <- sample.split(m_3, SplitRatio = 0.7)
training_3 <- subset(m_3, s_3 == T)
testing_3 <- subset(m_3, s_3 == F)
length(testing_3)
table(training_3$pol)
# SMOTE sampling
# install.packages("DMwR")
library(DMwR)
over2 <- SMOTE(pol ~., data = training_3, perc.over = 100)
over2
table(over2$pol)
# Model
logit_model_3 <- glm(pol ~., data = over2, family = "binomial")
logit_model_3
summary(logit_model_3)
fitted_results3 <- predict(logit_model_3, testing_3, type = "response")
fitted_results3
fitted_results30 <- ifelse(fitted_results3 > 0.5, 1, 0)
fitted_results30
table(testing_3$pol, fitted_results30)
mis_ClassError_3 <- mean(fitted_results30 != testing_3$pol)
mis_ClassError_3
print(paste("Accuracy = ", 1 - mis_ClassError_3))
# install.packages("caret")
library(caret)
confusion_matrix_3 <- confusionMatrix(table(testing_3$pol,fitted_results30))
confusion_matrix_3
m_3 <- read.csv(file.choose(), header = T)
# View(m_3)
m_3 <- m_3[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(m_3) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(m_3)
str(m_3)
m_3$pol <- as.factor(m_3$pol)
str(m_3)
table(m_3$pol)
summary(m_3)
#install.packages("caTools")
library(caTools)
set.seed(009)
s_3 <- sample.split(m_3, SplitRatio = 0.7)
training_3 <- subset(m_3, s_3 == T)
testing_3 <- subset(m_3, s_3 == F)
length(testing_3)
table(training_3$pol)
# SMOTE sampling
# install.packages("DMwR")
library(DMwR)
over2 <- SMOTE(pol ~., data = training_3, perc.over = 100)
over2
table(over2$pol)
table(training_3$pol)
73*2
#over2 <- SMOTE(pol ~., data = training_3, perc.over = 100)
#over2
#table(over2$pol)
over2 <- ovun.sample(pol ~., data = training_3, method = "over", N = 146)$data
#over2 <- SMOTE(pol ~., data = training_3, perc.over = 100)
#over2
#table(over2$pol)
library(ROSE)
over2 <- ovun.sample(pol ~., data = training_3, method = "over", N = 146)$data
over2
table(over2$pol)
# Model
logit_model_3 <- glm(pol ~., data = over2, family = "binomial")
logit_model_3
summary(logit_model_3)
fitted_results3 <- predict(logit_model_3, testing_3, type = "response")
fitted_results3
fitted_results30 <- ifelse(fitted_results3 > 0.5, 1, 0)
fitted_results30
table(testing_3$pol, fitted_results30)
mis_ClassError_3 <- mean(fitted_results30 != testing_3$pol)
mis_ClassError_3
print(paste("Accuracy = ", 1 - mis_ClassError_3))
# install.packages("caret")
library(caret)
confusion_matrix_3 <- confusionMatrix(table(testing_3$pol,fitted_results30))
confusion_matrix_3
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc_info3 <- roc(testing_3$pol, fitted_results3, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 3")
#With Threshold
roc_info30 <- roc(testing_3$pol, fitted_results30, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 30")
# SMOTE sampling
# install.packages("DMwR")
library(DMwR)
over2 <- SMOTE(pol ~., data = training_3, perc.over = 100)
over2
table(over2$pol)
# Model
logit_model_3 <- glm(pol ~., data = over2, family = "binomial")
logit_model_3
summary(logit_model_3)
fitted_results3 <- predict(logit_model_3, testing_3, type = "response")
fitted_results3
fitted_results30 <- ifelse(fitted_results3 > 0.5, 1, 0)
fitted_results30
table(testing_3$pol, fitted_results30)
mis_ClassError_3 <- mean(fitted_results30 != testing_3$pol)
mis_ClassError_3
print(paste("Accuracy = ", 1 - mis_ClassError_3))
# install.packages("caret")
library(caret)
confusion_matrix_3 <- confusionMatrix(table(testing_3$pol,fitted_results30))
confusion_matrix_3
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc_info3 <- roc(testing_3$pol, fitted_results3, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 3")
#With Threshold
roc_info30 <- roc(testing_3$pol, fitted_results30, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "brown", lwd = 4, print.auc = T, main = "ROC model 30")
mission_3 <- read.csv(file.choose(), header = T)
# View(mission_3)
mission_3 <- mission_3[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(mission_3) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(mission_3)
str(mission_3)
mission_3$pol <- as.factor(mission_3$pol)
str(mission_3)
table(mission_3$pol)
summary(mission_3)
#install.packages("caTools")
library(caTools)
set.seed(009)
split_3 <- sample.split(mission_3, SplitRatio = 0.7)
train_3 <- subset(mission_3, split_3 == T)
test_3 <- subset(mission_3, split_3 == F)
length(test_3)
table(train_3$pol)
#Scaling
train_3[-23] <- scale(train_3[-23])
test_3[-23] <- scale(test_3[-23])
# SMOTE sampling
# install.packages("DMwR")
library(DMwR)
over2 <- SMOTE(pol ~., data = train_3, perc.over = 100)
over2
table(over2$pol)
# Model
logit_model3 <- glm(pol ~., data = over2, family = "binomial")
logit_model3
summary(logit_model3)
fitted.results3 <- predict(logit_model3, test_3, type = "response")
fitted.results3
fitted.results30 <- ifelse(fitted.results3 > 0.5, 1, 0)
fitted.results30
table(test_3$pol, fitted.results30)
misClassError_3 <- mean(fitted.results30 != test_3$pol)
misClassError_3
print(paste("Accuracy = ", 1 - misClassError_3))
# install.packages("caret")
library(caret)
cm_3 <- confusionMatrix(table(test_3$pol,fitted.results30))
cm_3
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# ROC-AUC Curve
# Without Threshold
roc.info3 <- roc(test_3$pol, fitted.results3, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "red", lwd = 4, print.auc = T, main = "ROC model 3")
#With Threshold
roc.info30 <- roc(test_3$pol, fitted.results30, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "red", lwd = 4, print.auc = T, main = "ROC model 30")
m_4 <- read.csv(file.choose(), header = T)
# View(mission_4)
m_4 <- m_4[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(m_4) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(m_4)
str(m_4)
m_4$pol <- as.factor(m_4$pol)
str(m_4)
table(m_4$pol)
summary(m_4)
#install.packages("caTools")
library(caTools)
set.seed(009)
s_4 <- sample.split(m_4, SplitRatio = 0.7)
training_4 <- subset(m_4, s_4 == T)
testing_4 <- subset(m_4, s_4 == F)
length(testing_4)
table(training_4$pol)
# Undersampling sampling
# install.packages("ROSE")
library(ROSE)
over3 <- ovun.sample(pol ~., data = training_4, method = "under", N = 124)$data
over3
table(over3$pol)
# Model 4
logit_model_4 <- glm(pol ~., data = over3, family = "binomial")
logit_model_4
summary(logit_model_4)
fitted_results4 <- predict(logit_model_4, testing_4, type = "response")
fitted_results4
fitted_results40 <- ifelse(fitted_results4 > 0.5, 1, 0)
fitted_results40
table(testing_4$pol, fitted_results40)
mis_ClassError_4 <- mean(fitted_results40 != testing_4$pol)
mis_ClassError_4
print(paste("Accuracy = ", 1 - mis_ClassError_4))
#COnfusion Matrix
library(caret)
confusion_matrix_4 <- confusionMatrix(table(testing_4$pol,fitted_results40))
confusion_matrix_4
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# Withou Threshold
roc_info4 <- roc(testing_4$pol, fitted_results4, plot = T, legacy.axes = T,
percent = T,xlab = "False Positive Percentage",
ylab = "True Positive Percentage",col = "blue", lwd = 4,
print.auc = T, main = "(Without Scaling) ROC model 4")
# With Threshold
roc_info40 <- roc(testing_4$pol, fitted_results40, plot = T, legacy.axes = T,
percent = T,xlab = "False Positive Percentage",
ylab = "True Positive Percentage",col = "blue", lwd = 4,
print.auc = T, main = "(Without Scaling) ROC model 40")
mission_4 <- read.csv(file.choose(), header = T)
# View(mission_4)
mission_4 <- mission_4[,-c(1,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,26,28,
31,33,34,36,37,38,39,40,41,47,48,49,50,51,52,53,54,57,61,
63,64)]
colnames(mission_4) <- c("agegr18","agels65","male","unmarried","cad.tvd",
"bmi","pulseN","bph","bpl","rrN",
"diabetes1","hbAd","hbChild","ur","cret","bcr","billed",
"concession","stay","icu","ward","implant","pol")
summary(mission_4)
str(mission_4)
mission_4$pol <- as.factor(mission_4$pol)
str(mission_4)
table(mission_4$pol)
summary(mission_4)
#install.packages("caTools")
library(caTools)
set.seed(009)
split_4 <- sample.split(mission_4, SplitRatio = 0.7)
train_4 <- subset(mission_4, split_4 == T)
test_4 <- subset(mission_4, split_4 == F)
length(test_4)
table(train_4$pol)
#Scaling
train_4[-23] <- scale(train_4[-23])
test_4[-23] <- scale(test_4[-23])
# Undersampling sampling
# install.packages("ROSE")
library(ROSE)
over3 <- ovun.sample(pol ~., data = train_4, method = "under", N = 124)$data
over3
table(over3$pol)
# Model 4
logit_model4 <- glm(pol ~., data = over3, family = "binomial")
logit_model4
summary(logit_model4)
fitted.results4 <- predict(logit_model4, test_4, type = "response")
fitted.results4
fitted.results40 <- ifelse(fitted.results4 > 0.5, 1, 0)
fitted.results40
table(test_4$pol, fitted.results40)
misClassError_4 <- mean(fitted.results40 != test_4$pol)
misClassError_4
print(paste("Accuracy = ", 1 - misClassError_4))
library(caret)
cm_4 <- confusionMatrix(table(test_4$pol,fitted.results40))
cm_4
# ROC-AUC Curve
# install.packages("pROC")
library(pROC)
par(pty = "s")
# Withou Threshold
roc.info4 <- roc(test_4$pol, fitted.results4, plot = T, legacy.axes = T, percent = T,
xlab = "False Positive Percentage", ylab = "True Positive Percentage",
col = "orange", lwd = 4, print.auc = T, main = "ROC model 4")
